// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web.Data;

#nullable disable

namespace Web.Migrations
{
    [DbContext(typeof(SchoolContext))]
    partial class SchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web.Entities.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FacultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HomeroomTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FacultyId");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8458b3db-193f-4a81-ad1d-744c75419026"),
                            HomeroomTeacher = "Tam",
                            Name = "cntt1"
                        },
                        new
                        {
                            Id = new Guid("fe1059fc-de63-4dfd-b5f3-5800d1128657"),
                            HomeroomTeacher = "Tam",
                            Name = "cntt2"
                        },
                        new
                        {
                            Id = new Guid("ccd254dd-37fb-4ae3-9138-f8edea478608"),
                            HomeroomTeacher = "Tam",
                            Name = "cntt3"
                        },
                        new
                        {
                            Id = new Guid("0bf765e0-2299-49dd-93a6-34d7eba7e04e"),
                            HomeroomTeacher = "Tam",
                            Name = "cntt4"
                        },
                        new
                        {
                            Id = new Guid("695485ee-f0d4-4e4a-a636-f2243e91aa54"),
                            HomeroomTeacher = "Tam",
                            Name = "cntt5"
                        });
                });

            modelBuilder.Entity("Web.Entities.Faculty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Faculties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25d5cfdb-b9c8-486a-b135-b1344be0cecb"),
                            Name = "moi truong"
                        },
                        new
                        {
                            Id = new Guid("03577a21-a18e-43c1-901f-10f6b8cbbca3"),
                            Name = "dia chat"
                        },
                        new
                        {
                            Id = new Guid("75549c32-e787-4b7b-82a7-555c2b0fa786"),
                            Name = "co dien"
                        },
                        new
                        {
                            Id = new Guid("1ce21ba4-2a22-4c49-b2b0-faa525319a10"),
                            Name = "kinh te"
                        },
                        new
                        {
                            Id = new Guid("fb3026ff-8507-4f5b-a318-66611edff090"),
                            Name = "mo"
                        });
                });

            modelBuilder.Entity("Web.Entities.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SujectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SujectId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("Web.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d13ed707-d793-4aa3-aaf5-943112725c46"),
                            Address = "Son La",
                            Email = "dtg.csl@gmail.com",
                            FullName = "Giang",
                            Gender = false
                        },
                        new
                        {
                            Id = new Guid("104c5cc3-4458-4604-9c6b-9969de6f2445"),
                            Address = "Son La",
                            Email = "dtg.csl@gmail.com",
                            FullName = "Giang1",
                            Gender = false
                        },
                        new
                        {
                            Id = new Guid("62c4e7e3-7e42-4b13-b7fb-0bdebb71037c"),
                            Address = "Son La",
                            Email = "dtg.csl@gmail.com",
                            FullName = "Giang2",
                            Gender = false
                        },
                        new
                        {
                            Id = new Guid("f71543da-ada6-4916-ac01-9ed7b2066f26"),
                            Address = "Son La",
                            Email = "dtg.csl@gmail.com",
                            FullName = "Giang3",
                            Gender = false
                        },
                        new
                        {
                            Id = new Guid("1fb214d1-3e54-4038-89eb-a48b8a9334dd"),
                            Address = "Son La",
                            Email = "dtg.csl@gmail.com",
                            FullName = "Giang3",
                            Gender = false
                        });
                });

            modelBuilder.Entity("Web.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfCredits")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("afd93aef-d360-458e-8688-2af4d60f1b1e"),
                            Name = "c++",
                            NumberOfCredits = 3
                        },
                        new
                        {
                            Id = new Guid("ba1a28b7-ae46-4a4c-bad6-a0f812dbd6ec"),
                            Name = "c",
                            NumberOfCredits = 3
                        },
                        new
                        {
                            Id = new Guid("99095f8a-3f0c-4c9b-b2a3-50d0df5e6bcd"),
                            Name = "c#",
                            NumberOfCredits = 3
                        },
                        new
                        {
                            Id = new Guid("a96434e2-2a0b-41b8-b412-4083eb9083f9"),
                            Name = "java",
                            NumberOfCredits = 3
                        },
                        new
                        {
                            Id = new Guid("b86ece5b-2d73-48d1-a74d-ff40ae0f5c75"),
                            Name = "js",
                            NumberOfCredits = 3
                        },
                        new
                        {
                            Id = new Guid("e7847cdf-96e8-4147-8da8-0ea1cde7ccff"),
                            Name = "ctdl",
                            NumberOfCredits = 3
                        });
                });

            modelBuilder.Entity("Web.Entities.Classroom", b =>
                {
                    b.HasOne("Web.Entities.Faculty", "Faculty")
                        .WithMany("Classrooms")
                        .HasForeignKey("FacultyId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("Web.Entities.Result", b =>
                {
                    b.HasOne("Web.Entities.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId");

                    b.HasOne("Web.Entities.Student", "Student")
                        .WithMany("Results")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.HasOne("Web.Entities.Subject", "Subject")
                        .WithMany("Results")
                        .HasForeignKey("SujectId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("Classroom");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Web.Entities.Student", b =>
                {
                    b.HasOne("Web.Entities.Classroom", "Classroom")
                        .WithMany("Students")
                        .HasForeignKey("ClassroomId");

                    b.Navigation("Classroom");
                });

            modelBuilder.Entity("Web.Entities.Classroom", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Web.Entities.Faculty", b =>
                {
                    b.Navigation("Classrooms");
                });

            modelBuilder.Entity("Web.Entities.Student", b =>
                {
                    b.Navigation("Results");
                });

            modelBuilder.Entity("Web.Entities.Subject", b =>
                {
                    b.Navigation("Results");
                });
#pragma warning restore 612, 618
        }
    }
}
